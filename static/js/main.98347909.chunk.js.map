{"version":3,"sources":["img/logo.svg","components/Menu.js","components/sections/Intro.js","components/Timeline.js","components/sections/Jobs.js","components/Project.js","components/sections/Projects.js","components/sections/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["menu_options","label","link","Menu","props","useState","scroll","set_scroll","useEffect","window","addEventListener","scrollY","scroll_dir","set_scroll_dir","last_y","pageYOffset","ticking","update_scroll_dir","y","Math","abs","max","on_scroll","requestAnimationFrame","console","log","removeEventListener","className","href","src","logo","class","alt","map","o","Intro","typed_text","set_typed_text","typing","set_typing","text","text_index","char_index","type","length","substring","setTimeout","erase","type_delay","onClick","document","querySelectorAll","scrollIntoView","monthDiff","d1","d2","getMonth","getFullYear","countOverlaps","range","other_ranges","count","forEach","r","a_start","a_end","b_start","b_end","start_date","end_date","Timeline","jobs","job","Date","first","last","start","diff","Array","fill","_","i","m","active_job","set_active_job","j","next_event","direction","value","getElementById","behavior","block","inline","title","company","toLocaleString","month","description","line","d","style","left","width","bottom","background","id","top","slice","Jobs","Project","project","tags","tag","Projects","projects","Footer","App","JobsData","ProjectsData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.98347909.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.0f419f8b.svg\";","import React, { useState, useEffect } from 'react';\nimport '../styles/Menu.css';\n\nimport logo from '../img/logo.svg';\n\nvar menu_options = [\n    { label: \"About\", link: \"/#about\" },\n    { label: \"Work\", link: \"/#jobs\" },\n    { label: \"Projects\", link: \"/#projects\" },\n    { label: \"Contact\", link: \"/#contact\" }\n]\n\nexport default function Menu(props) {\n    // Detect whether or not window is scrolled\n    const [scroll, set_scroll] = useState(false);\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            set_scroll(window.scrollY > 20);\n        });\n    }, []);\n\n    // Detect scroll direction\n    const [scroll_dir, set_scroll_dir] = useState(\"up\");\n\n    useEffect(() => {\n        const threshold = 0;\n        let last_y = window.pageYOffset,\n            ticking = false;\n\n        const update_scroll_dir = () => {\n            const y = window.pageYOffset;\n\n            ticking = false;\n            if (Math.abs(y - last_y) < threshold) return;\n\n            set_scroll_dir(y > last_y ? 'down' : 'up');\n            last_y = Math.max(y, 0);\n        };\n\n        const on_scroll = () => {\n            if (!ticking) {\n                window.requestAnimationFrame(update_scroll_dir);\n                ticking = true;\n            }\n        };\n\n        window.addEventListener(\"scroll\", on_scroll);\n\n        console.log(scroll_dir);\n\n        return () => window.removeEventListener(\"scroll\", on_scroll);\n    }, [scroll_dir]);\n\n\n    return (\n        <div className={\n            'menu ' +\n            (scroll ? 'menu_scrolled ' : '') +\n            (scroll_dir === 'down' ? 'menu_hidden' : '')}\n        >\n            <a className='logo_container' href='/'>\n                <img src={logo} class='menu_logo' alt='Tyler Ekaireb Monogram Logo' />\n                <span className='menu_logo_text'>Tyler Ekaireb</span>\n            </a>\n            <div className='options_container'>\n                {menu_options.map(o =>\n                    <code>\n                        <a className='menu_option' href={o.link}>\n                            {o.label}\n                        </a>\n                    </code>\n                )}\n            </div>\n            <div className='menu_button'>☰</div>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport '../../styles/Intro.css'\n\nexport default function Intro(props) {\n    const [typed_text, set_typed_text] = useState('Tyler Ekaireb'); // Text typed within typewriter\n    const [typing, set_typing] = useState(false);                   // Typing flag\n\n    // Phrases to be typed\n    const text = ['Tyler Ekaireb', 'an engineer', 'a programmer', 'a tinkerer', 'a learner', 'a smoothie-maker'];\n\n    // Delays in milliseconds\n    const type_delay = 120;     // Delay between typing characters\n    const erase_delay = 100;    // Delay between erasing characters   \n    const new_delay = 5000;     // Delay between phrases\n    // Index variables\n    let text_index = 0;         // Index of phrase\n    let char_index = 12;        // Index of char within phrase\n\n    // Type each character within phrase, then call erase\n    function type() {\n        // Type as long as there are characters left in phrase\n        if (char_index <= text[text_index].length) {\n            if (!typing) set_typing(true);\n            set_typed_text(text[text_index].substring(0, char_index++));\n            setTimeout(type, type_delay);\n        }\n        // Call erase when finished\n        else {\n            set_typing(false);\n            setTimeout(erase, new_delay);\n        }\n    }\n\n    // Erase each character within phrase, then call type (with next phrase)\n    function erase() {\n        // Erase as long as there are characters left in typed_text\n        if (char_index > 0) {\n            if (!typing) set_typing(true);\n            set_typed_text(text[text_index].substring(0, --char_index));\n            setTimeout(erase, erase_delay);\n        }\n        // Go to next word and call type when finished\n        else {\n            set_typing(false);\n            text_index++;\n            if (text_index >= text.length) text_index = 0;\n            setTimeout(type, type_delay + 1000);\n        }\n    }\n\n    // Call erase when the page first loads\n    useEffect(() => {\n        if (text.length) setTimeout(erase, 4000);\n    }, []);\n\n    return (\n        <div className='intro'>\n            <p className='greeting'>Hello</p>\n            <div className=\"typewriter\">\n                <p>I'm <span className='typed_text'>{typed_text}</span><span className={'cursor ' + (typing ? 'typing' : '')}>&nbsp;</span></p>\n            </div>\n            <div className='down_button' onClick={() => document.querySelectorAll('.jobs')[0].scrollIntoView()}>↓</div>\n        </div>\n    );\n}","import React, { useState, useEffect } from 'react';\nimport '../styles/Jobs.css';\n\n// Determine if two Dates have the same month and year\nfunction sameDate(d1, d2) {\n    return d1.getMonth === d2.getMonth && d1.getFullYear() === d2.getFullYear();\n}\n\n// Find number of months between two Dates\nfunction monthDiff(d1, d2) {\n    return d1.getMonth() - d2.getMonth() + (12 * (d1.getFullYear() - d2.getFullYear()))\n}\n\n// Determine whether or not two (date) ranges overlap\nfunction rangesOverlap(a_start, a_end, b_start, b_end) {\n    if (a_start <= b_start && b_start <= a_end) return true; // b starts in a\n    if (a_start <= b_end && b_end <= a_end) return true; // b ends in a\n    if (b_start < a_start && a_end < b_end) return true; // a in b\n    return false;\n}\n\n// Counts number of collisions between range and other_ranges\nfunction countOverlaps(range, other_ranges) {\n    let count = 0;\n\n    other_ranges.forEach(r => {\n        if (rangesOverlap(range.start_date, range.end_date, r.start_date, r.end_date))\n            count++;\n    });\n\n    return count;\n}\n\nexport default function Timeline(props) {\n    const TICK = 15; // Distance between months on timeline (in px)\n\n    // Convert date strings to Date objects\n    let jobs = props.jobs.map(job => ({\n        ...job,\n        start_date: new Date(job.start_date),\n        end_date: (job.end_date !== '' ? new Date(job.end_date) : new Date()) // Use present if no end_date specified\n    }));\n\n    // First and last job objects\n    let first = jobs[props.jobs.length - 1],\n        last = jobs[0];\n\n    // First and last dates in job timeline\n    let start = first.start_date,\n        end = last.end_date;\n\n    // Number of months between start/end dates\n    let diff = monthDiff(end, start);\n\n    // Generate array of objects containing every month/year between start and end, inclusive\n    var range = Array(diff + 1).fill().map((_, i) => ({\n        m: (i + start.getMonth()) % 12, // Month\n        y: start.getFullYear() + (i + start.getMonth()) / 12 // Year\n    }));\n\n    // Getter/Setter for current active job index\n    const [active_job, set_active_job] = useState(0);\n\n    // Current active job\n    let j = jobs[active_job];\n\n    const next_event = (direction, value = -1) => {\n        // Increment or decrement active_job\n        if (value === -1) {\n            if (direction && active_job !== 0) set_active_job(active_job - 1);\n            if (!direction && active_job !== jobs.length - 1) set_active_job(active_job + 1);\n        } else set_active_job(value);\n\n        // Bring active job bar on timeline into view\n        document.getElementById('job_bar_' + active_job).scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'start' })\n    }\n\n    \n\n    return (\n        <>\n            <div className='timeline_event'>\n                <p className='event_header'>\n                    {j.title} @ <a href={j.link}>{j.company}</a>\n                </p>\n                <code className='event_timeframe'>\n                    {j.start_date.toLocaleString('default', { month: 'long' })} {j.start_date.getFullYear()} -&nbsp;\n                    {sameDate(j.end_date, new Date()) ? 'Present' : j.end_date.toLocaleString('default', { month: 'long' }) + ' ' + j.end_date.getFullYear()}\n                </code>\n                <div className='event_description'>\n                    {j.description.map(line => <span>{line}<br /></span>)}\n                </div>\n\n                {active_job !== jobs.length - 1 && <div className='event_left' onClick={() => next_event(0)}>←</div>}\n                {active_job !== 0 && <div className='event_right' onClick={() => next_event(1)}>→</div>}\n            </div>\n            <div className='axis'>\n                {/* Axis */}\n                {range.map((d, i) =>\n                    <>\n                        {/* Gridlines */}\n                        <div className='line' style={{\n                            left: i * TICK,\n                            width: d.m ? 1 : 2, // Make width 2px on new year\n                            bottom: d.m ? 40 : 30, // Make line lower on new year\n                            background: d.m ? 'rgb(180, 245, 240, 0.1)' : 'rgb(180, 245, 240, 0.3)' // Make color darker on new year\n                        }}></div>\n\n                        {/* Date Labels */}\n                        {d.m === 0 && <div className='year' style={{ left: i * TICK - 15 }}>{d.y}</div>}\n                    </>\n                )}\n\n                {/* Jobs */}\n                {jobs.map((job, i) =>\n                    <div\n                        className='job_bar' id={'job_bar_' + i}\n                        style={{\n                            left: monthDiff(job.start_date, start) * TICK,\n                            width: monthDiff(job.end_date, job.start_date) * TICK,\n                            top: countOverlaps(job, jobs.slice(0, i)) * (15) + 5,\n                            background: i === active_job ? '#00d9f0' : '#b4f5f0'\n                        }}\n                        onClick={() => next_event(0, i)}\n                    ></div>\n                )}\n            </div>\n        </>\n    );\n\n}","import React from 'react';\nimport '../../styles/Jobs.css';\n\nimport Timeline from '../Timeline';\n\nexport default function Jobs(props) {\n    return (\n        <div className='jobs' id='jobs'>\n            <h1>Work History</h1>\n            <div className='jobs_container'>\n                <div className='jobs_timeline'>\n                    <div className='events'></div>\n                    <Timeline jobs={props.jobs} />\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport '../styles/Project.css';\n\nexport default function Project(props) {\n\n    return (\n        <div className='project'>\n            <div>\n                <h3 className='project_header'>{props.project.title}</h3>\n                <p className='project_description'>{props.project.description.map(line => <span>{line}<br /></span>)}</p>\n            </div>\n            <div className='project_tags'>\n                {props.project.tags.map(tag => <code className='project_tag'>{tag}</code>)}\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport Project from '../Project';\nimport '../../styles/Projects.css';\n\nexport default function Projects(props) {\n    return (\n        <div className='projects' id='projects'>\n            <h1>Projects</h1>\n            <h3 className='projects_subheader'><code><a href='https://github.com/tekaireb/'>view more on GitHub</a></code></h3>\n            <div className='projects_grid'>\n                {props.projects.map(project => <Project project={project} />)}\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport '../../styles/Footer.css';\n\nexport default function Footer(props) {\n    return (\n        <div className='footer' id='footer'>\n            <code><a href='https://github.com/tekaireb/tekaireb.github.io/tree/master' class='credits'>Built by Tyler Ekaireb</a></code>\n        </div>\n    );\n}","import '../styles/App.css';\nimport JobsData from \"../content/jobs.json\";\nimport ProjectsData from \"../content/projects.json\";\n\nimport Menu from './Menu';\nimport Intro from './sections/Intro';\nimport Jobs from './sections/Jobs';\nimport Projects from './sections/Projects';\nimport Footer from './sections/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Menu />\n      <Intro />\n      <Jobs jobs={JobsData} />\n      <Projects projects={ProjectsData} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}